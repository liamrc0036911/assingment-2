<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>